[34m[1mwandb[0m: Downloading large artifact model:v205, 157.48MB. 1 files...
[34m[1mwandb[0m:   1 of 1 files downloaded.
Done. 0:0:0.5
Directory contents: ['model.pth']
Loading model from: /home/edramos/Documents/MLOPS/WBC-Cancer/artifacts/model:v205/model.pth
Model does not have a 'head' attribute. Modify accordingly based on model architecture.
/home/edramos/Documents/MLOPS/WBC-Cancer/main.py:72: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path), strict=False)
/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/cuda/__init__.py:129: UserWarning: CUDA initialization: Unexpected error from cudaGetDeviceCount(). Did you run some cuda functions before calling NumCudaDevices() that might have already set an error? Error 804: forward compatibility was attempted on non supported HW (Triggered internally at /opt/conda/conda-bld/pytorch_1728945388038/work/c10/cuda/CUDAFunctions.cpp:108.)
  return torch._C._cuda_getDeviceCount() > 0
     [37;48;2;0;113;102m INFO [0m  [1;92m127.0.0.1[0m:[1;36m53872[0m - [32m"POST /predict/inception_v4 HTTP/1.1"[0m [1;36m500[0m
    [37;48;2;0;113;102m ERROR [0m  Exception in ASGI application
Traceback (most recent call last):
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/uvicorn/protocols/http/httptools_impl.py", line 409, in run_asgi
    result = await app(  # type: ignore[func-returns-value]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/uvicorn/middleware/proxy_headers.py", line 60, in __call__
    return await self.app(scope, receive, send)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/fastapi/applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/starlette/applications.py", line 112, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/starlette/middleware/errors.py", line 187, in __call__
    raise exc
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/starlette/middleware/errors.py", line 165, in __call__
    await self.app(scope, receive, _send)
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/starlette/middleware/exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/starlette/routing.py", line 714, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/starlette/routing.py", line 734, in app
    await route.handle(scope, receive, send)
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/starlette/routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/starlette/routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/starlette/_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/starlette/routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/fastapi/routing.py", line 301, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/fastapi/routing.py", line 212, in run_endpoint_function
    return await dependant.call(**values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/edramos/Documents/MLOPS/WBC-Cancer/main.py", line 100, in predict
    model = load_model(wandb_codes[model_name], model_name)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/edramos/Documents/MLOPS/WBC-Cancer/main.py", line 72, in load_model
    model.load_state_dict(torch.load(model_path), strict=False)
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/serialization.py", line 1360, in load
    return _load(
           ^^^^^^
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/serialization.py", line 1848, in _load
    result = unpickler.load()
             ^^^^^^^^^^^^^^^^
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/serialization.py", line 1812, in persistent_load
    typed_storage = load_tensor(
                    ^^^^^^^^^^^^
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/serialization.py", line 1784, in load_tensor
    wrap_storage=restore_location(storage, location),
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/serialization.py", line 601, in default_restore_location
    result = fn(storage, location)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/serialization.py", line 539, in _deserialize
    device = _validate_device(location, backend_name)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/edramos/miniconda3/envs/pytorch/lib/python3.12/site-packages/torch/serialization.py", line 508, in _validate_device
    raise RuntimeError(
RuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device('cpu') to map your storages to the CPU.
     [37;48;2;0;113;102m INFO [0m  Shutting down
     [37;48;2;0;113;102m INFO [0m  Waiting for application shutdown.
     [37;48;2;0;113;102m INFO [0m  Application shutdown complete.
     [37;48;2;0;113;102m INFO [0m  Finished server process [1m[[0m[1;36m170707[0m[1m][0m
